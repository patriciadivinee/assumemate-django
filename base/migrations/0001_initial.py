# Generated by Django 5.1.1 on 2024-10-01 14:06

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user_prof_id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('user_prof_fname', models.CharField(max_length=50)),
                ('user_prof_lname', models.CharField(max_length=50)),
                ('user_prof_gender', models.CharField(max_length=6)),
                ('user_prof_dob', models.DateField()),
                ('user_prof_mobile', models.CharField(max_length=11)),
                ('user_prof_address', models.CharField(max_length=255)),
                ('user_prof_pic', models.URLField(blank=True, null=True)),
                ('user_prof_valid_id', models.URLField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_profile',
            },
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('is_reviewer', models.BooleanField(default=False)),
                ('is_assumee', models.BooleanField(default=False)),
                ('is_assumptor', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('chatroom_id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('chatroom_last_message', models.TextField(blank=True, null=True)),
                ('chatroom_user_1', models.ForeignKey(db_column='chatroom_user_1', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_id_1', to=settings.AUTH_USER_MODEL)),
                ('chatroom_user_2', models.ForeignKey(db_column='chatroom_user_2', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_id_2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chat_room',
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('chatmess_id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('chatmess_content', models.TextField(blank=True, null=True)),
                ('chatmess_created_at', models.DateTimeField(auto_now_add=True)),
                ('chatmess_is_read', models.BooleanField(default=False)),
                ('sender_id', models.ForeignKey(db_column='user_id', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='messages', to=settings.AUTH_USER_MODEL)),
                ('chatroom_id', models.ForeignKey(db_column='chatroom_id', on_delete=django.db.models.deletion.PROTECT, related_name='messages', to='base.chatroom')),
            ],
            options={
                'db_table': 'chat_message',
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('offer_id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('offer_price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('assumee_id', models.ForeignKey(db_column='assumee_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'offer',
            },
        ),
        migrations.CreateModel(
            name='UserApplication',
            fields=[
                ('user_prof_id', models.OneToOneField(db_column='user_prof_id', editable=False, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='base.userprofile')),
                ('user_app_status', models.CharField(default='PENDING', max_length=10)),
                ('user_app_approved_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_application',
            },
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_id',
            field=models.OneToOneField(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='UserVerification',
            fields=[
                ('user_verification_id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('user_verification_email', models.EmailField(max_length=254, unique=True)),
                ('user_verification_code', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('user_verification_is_verified', models.BooleanField(default=False)),
                ('user_verification_created_at', models.DateTimeField(auto_now_add=True)),
                ('user_verification_expires_at', models.DateTimeField()),
                ('user_id', models.OneToOneField(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_verifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_verification',
            },
        ),
        migrations.AddConstraint(
            model_name='chatroom',
            constraint=models.UniqueConstraint(fields=('chatroom_user_1', 'chatroom_user_2'), name='unique_chat_room'),
        ),
        migrations.AddField(
            model_name='userapplication',
            name='user_app_reviewer_id',
            field=models.ForeignKey(blank=True, db_column='user_app_reviewer_id', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
